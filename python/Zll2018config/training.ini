;!! -----------------------------
;!! Config for the MVA training
;!! -----------------------------

[MVAGeneral]
ntupleVersion = V11-Dec9
type = BDT
SettingsAll_lowd = !H:!V:NTrees=400:nEventsMin=200:MaxDepth=3:BoostType=AdaBoost:AdaBoostBeta=0.1:SeparationType=MisClassificationError:nCuts=15:PruneMethod=NoPruning
SettingsAll_highd = !H:!V:NTrees=400:nEventsMin=200:MaxDepth=3:BoostType=AdaBoost:AdaBoostBeta=0.1:SeparationType=MisClassificationError:nCuts=15:PruneMethod=NoPruning

[factory]
factoryname = MVA
factorysettings = !V:Color:!DrawProgressBar:AnalysisType=Classification:Transformations=I

[MVALists]
List_for_submitscript = <!MVALists|List_BIT!>

#List = SR_low_Zll,SR_medhigh_Zll
List = VV_SR_low_Zll,VV_SR_medhigh_Zll
List_Multi = Multi_medhigh_Zll,Multi_low_Zll
List_Boosted = BDT_Zll_BOOSTFinal_wdB
List_BIT = BIT_Zll_test_2018

;====================

[SR_low_Zll]
signals          = [<!Plot_general|allSIG!>]
backgrounds      = [<!Plot_general|allBKG!>]
treeVarSet       = ZllBDTVars<!General|btagMethod!>_<!General|Htype!>
treeCut          = SR_low_Zll
branchName       = DNN_200218_VHLegacyDNN2018V11_Zll_Jan2020OverlapToBoostedDeepCSV_SR_low_Zll
checkpoint       = /mnt/t3nfs01/data01/shome/krgedia/CMSSW_10_1_0/src/Xbb/python/tfVHbbDNN/results/SR_low_Zll_reshape_resonly/Zll2018_SR_low_Zll_200221_V11-Dec9.h5/32-32-32-32-32-32-32-32/0.05-0.05-0.05-0.05-0.05-0.05-0.05-0.05/1.000e-03/rnd_1/checkpoints/model.ckpt
bins             = [0.0000, 0.0195, 0.0752, 0.1513, 0.2379, 0.3381, 0.4506, 0.5606, 0.6601, 0.7432, 0.8027, 0.8513, 0.8908, 0.9220, 0.9521, 1.0001] 
signalIndex      = 0


[SR_medhigh_Zll]
signals          = [<!Plot_general|allSIG!>]
backgrounds      = [<!Plot_general|allBKG!>]
treeVarSet       = ZllBDTVars<!General|btagMethod!>_<!General|Htype!>
treeCut          = SR_medhigh_Zll
branchName       = DNN_200218_VHLegacyDNN2018V11_Zll_Jan2020OverlapToBoostedDeepCSV_SR_medhigh_Zll
checkpoint       = /mnt/t3nfs01/data01/shome/krgedia/CMSSW_10_1_0/src/Xbb/python/tfVHbbDNN/results/SR_medhigh_Zll_reshape_resonly/Zll2018_SR_medhigh_Zll_200221_V11-Dec9.h5/32-32-32-32-32-32-32-32/0.05-0.05-0.05-0.05-0.05-0.05-0.05-0.05/1.000e-03/rnd_1/checkpoints/model.ckpt 
bins             = [0.0000, 0.0400, 0.0944, 0.1641, 0.2471, 0.3393, 0.4364, 0.5369, 0.6460, 0.7527, 0.8340, 0.8864, 0.9253, 0.9535, 0.9749, 1.0001]
signalIndex      = 0



[SR_Zll_BIT_2018]
signals     = [<!Plot_general|allSIG!>]
backgrounds = [<!Plot_general|BKGBIT!>]
treeVarSet  = BITvarSet
treeCut = SR_lowmedhigh_Zll
branchName       =  BIT_SR_lowmedhigh_Zmm
checkpointpath   = /work/fglessge/EFT/CMSSW_10_1_0/src/Xbb/python/LGBMvhbb/checkpoints/
checkpointprefix = Zll2018_LGBM_SRlowmedhigh_noDNNcut_BG_
WC               = 1,6,7
#quadOnly         = False
signalIndex      = 0


[BIT_SRlowmedhigh_Zll_2018]
signals     = [<!Plot_general|allSIG!>]
backgrounds = [<!Plot_general|BKGBIT!>]
treeVarSet  = BIT_SRlowmedhigh_Zll_varSet
treeCut = SR_lowmedhigh_Zll
checkpointpath   = /work/fglessge/EFT/CMSSW_10_1_0/src/Xbb/python/LGBMvhbb/checkpoints/
checkpointprefix = Zll2018_LGBM_SRlowmedhigh_noDNNcut_allfeatures_
WC               = 0,1,2,3,6,7,8,9,10,11
#quadOnly         = False
signalIndex      = 0

[BIT_boosted_Zll_2018]
signals     = [<!Plot_general|allSIG!>]
backgrounds = [<!Plot_general|BKGBIT!>]
treeVarSet  = BIT_boosted_Zll_varSet
treeCut = SR_high_Zll_BOOST
checkpointpath   = /work/fglessge/EFT/CMSSW_10_1_0/src/Xbb/python/LGBMvhbb/checkpoints/
checkpointprefix = Zll2018_LGBM_boosted_noDNNcut_allfeatures_
WC               = 0,1,2,3,6,7,8,9,10,11
#quadOnly         = False
signalIndex      = 0


;===========================
;Variables for training and evaluation
;===========================

[ZllBDTVarsDeepCSV_KINFIT_WP]
Nominal = kinFit_H_mass_fit H_mass kinFit_H_pt_fit H_pt kinFit_HVdPhi_fit abs(VHbb::deltaPhi(H_phi,V_phi)) (Jet_btagDeepB[hJidx[0]]>0.1241)+(Jet_btagDeepB[hJidx[0]]>0.4184)+(Jet_btagDeepB[hJidx[0]]>0.7527) (Jet_btagDeepB[hJidx[1]]>0.1241)+(Jet_btagDeepB[hJidx[1]]>0.4184)+(Jet_btagDeepB[hJidx[1]]>0.7527) max(kinFit_hJets_pt_0_fit,kinFit_hJets_pt_1_fit) max(hJets_0_pt_FSRrecovered,hJets_1_pt_FSRrecovered) min(kinFit_hJets_pt_0_fit,kinFit_hJets_pt_1_fit) min(hJets_0_pt_FSRrecovered,hJets_1_pt_FSRrecovered) kinFit_V_mass_fit V_mass Sum$(Jet_Pt>30&&abs(Jet_eta)<2.4&&(Jet_puId>6||Jet_Pt>50)&&Jet_jetId>4&&Jet_lepFilter>0&&Iteration$!=hJidx[0]&&Iteration$!=hJidx[1]) kinFit_V_pt_fit V_pt kinFit_jjVPtRatio_fit (H_pt/V_pt) hJets_FSRrecovered_dEta SA5 VHbb::deltaR(kinFit_H_eta_fit,kinFit_H_phi_fit,kinFit_V_eta_fit,kinFit_V_phi_fit) VHbb::deltaR(H_eta,H_phi,V_eta,V_phi) MET_Pt kinFit_H_mass_sigma_fit kinFit_n_recoil_jets_fit TMath::Sqrt(hJets_FSRrecovered_dEta*hJets_FSRrecovered_dEta+hJets_FSRrecovered_dPhi*hJets_FSRrecovered_dPhi)

[ZllBDTBOOSTVarsFinal_wdB]
Nominal: FatJet_Msoftdrop[Hbb_fjidx] FatJet_Pt[Hbb_fjidx] MET_Pt V_mt SA5 FatJet_Pt[Hbb_fjidx]/V_pt (FatJet_deepTagMD_bbvsLight[Hbb_fjidx])>0.97 (-99+(hJidx[0]>-1)*(99+H_mass))


# uses both variables
[ZllBDTVarsDeepCSV_KINFIT]
Nominal = kinFit_H_mass_fit H_mass kinFit_H_pt_fit H_pt kinFit_HVdPhi_fit abs(VHbb::deltaPhi(H_phi,V_phi)) Jet_btagDeepB[hJidx[0]] Jet_btagDeepB[hJidx[1]] max(kinFit_hJets_pt_0_fit,kinFit_hJets_pt_1_fit) max(hJets_0_pt_FSRrecovered,hJets_1_pt_FSRrecovered) min(kinFit_hJets_pt_0_fit,kinFit_hJets_pt_1_fit) min(hJets_0_pt_FSRrecovered,hJets_1_pt_FSRrecovered) kinFit_V_mass_fit V_mass Sum$(Jet_Pt>30&&abs(Jet_eta)<2.4&&(Jet_puId>6||Jet_Pt>50)&&Jet_jetId>4&&Jet_lepFilter>0&&Iteration$!=hJidx[0]&&Iteration$!=hJidx[1]) kinFit_V_pt_fit V_pt kinFit_jjVPtRatio_fit (H_pt/V_pt) hJets_FSRrecovered_dEta SA5 VHbb::deltaR(kinFit_H_eta_fit,kinFit_H_phi_fit,kinFit_V_eta_fit,kinFit_V_phi_fit) VHbb::deltaR(H_eta,H_phi,V_eta,V_phi) MET_Pt kinFit_H_mass_sigma_fit kinFit_n_recoil_jets_fit TMath::Sqrt(hJets_FSRrecovered_dEta*hJets_FSRrecovered_dEta+hJets_FSRrecovered_dPhi*hJets_FSRrecovered_dPhi)

[ZllBDTVarsDeepCSV_KINFITONLY]
Nominal = kinFit.H_mass_fit_fallback kinFit.H_pt_fit_fallback kinFit.HVdPhi_fit_fallback Jet_btagDeepB[hJidx[0]] Jet_btagDeepB[hJidx[1]] kinFit.hJets_pt_0_fit_fallback kinFit.hJets_pt_1_fit_fallback kinFit.V_mass_fit Sum$(Jet_PtReg>30&&abs(Jet_eta)<2.4&&(Jet_puId>6||Jet_Pt>50)&&Jet_jetId>4&&Jet_lepFilter>0&&Iteration$!=hJidx[0]&&Iteration$!=hJidx[1]) kinFit.V_pt_fit kinFit.jjVPtRatio_fit_fallback abs(Jet_eta[hJidx[0]]-Jet_eta[hJidx[1]]) SA5 VHbb::deltaR(kinFit.H_eta_fit,kinFit.H_phi_fit,kinFit.V_eta_fit,kinFit.V_phi_fit) MET_Pt kinFit.H_mass_sigma_fit kinFit.n_recoil_jets_fit VHbb::deltaR(Jet_eta[hJidx[0]],Jet_phi[hJidx[0]],Jet_eta[hJidx[1]],Jet_phi[hJidx[1]]) 

[ZllBDTVarsDeepCSV_REG]
Nominal = H_mass H_pt abs(VHbb::deltaPhi(H_phi,V_phi)) Jet_btagDeepB[hJidx[0]] Jet_btagDeepB[hJidx[1]] Jet_PtReg[hJidx[0]] Jet_PtReg[hJidx[1]] V_mass Sum$(Jet_PtReg>30&&abs(Jet_eta)<2.4&&(Jet_puId>6||Jet_Pt>50)&&Jet_jetId>0&&Jet_lepFilter>0&&Iteration$!=hJidx[0]&&Iteration$!=hJidx[1]) V_pt (H_pt/V_pt) abs(Jet_eta[hJidx[0]]-Jet_eta[hJidx[1]]) SA5 VHbb::deltaR(H_eta,H_phi,V_eta,V_phi) MET_Pt VHbb::deltaR(Jet_eta[hJidx[0]],Jet_phi[hJidx[0]],Jet_eta[hJidx[1]],Jet_phi[hJidx[1]])


;!! ------------------
;!! Boosted MVA 
;!! ------------------


;===========================
;Variables for training and evaluation
;===========================

[ZllBDTVarsDeepCSV_KINFIT_WP]
Nominal = kinFit_H_mass_fit H_mass kinFit_H_pt_fit H_pt kinFit_HVdPhi_fit abs(VHbb::deltaPhi(H_phi,V_phi)) (Jet_btagDeepB[hJidx[0]]>0.1241)+(Jet_btagDeepB[hJidx[0]]>0.4184)+(Jet_btagDeepB[hJidx[0]]>0.7527) (Jet_btagDeepB[hJidx[1]]>0.1241)+(Jet_btagDeepB[hJidx[1]]>0.4184)+(Jet_btagDeepB[hJidx[1]]>0.7527) max(kinFit_hJets_pt_0_fit,kinFit_hJets_pt_1_fit) max(hJets_0_pt_FSRrecovered,hJets_1_pt_FSRrecovered) min(kinFit_hJets_pt_0_fit,kinFit_hJets_pt_1_fit) min(hJets_0_pt_FSRrecovered,hJets_1_pt_FSRrecovered) kinFit_V_mass_fit V_mass Sum$(Jet_Pt>30&&abs(Jet_eta)<2.4&&(Jet_puId>6||Jet_Pt>50)&&Jet_jetId>4&&Jet_lepFilter>0&&Iteration$!=hJidx[0]&&Iteration$!=hJidx[1]) kinFit_V_pt_fit V_pt kinFit_jjVPtRatio_fit (H_pt/V_pt) hJets_FSRrecovered_dEta SA5 VHbb::deltaR(kinFit_H_eta_fit,kinFit_H_phi_fit,kinFit_V_eta_fit,kinFit_V_phi_fit) VHbb::deltaR(H_eta,H_phi,V_eta,V_phi) MET_Pt kinFit_H_mass_sigma_fit kinFit_n_recoil_jets_fit TMath::Sqrt(hJets_FSRrecovered_dEta*hJets_FSRrecovered_dEta+hJets_FSRrecovered_dPhi*hJets_FSRrecovered_dPhi)

[ZllBDTBOOSTVarsFinal_wdB]
Nominal: FatJet_Msoftdrop[Hbb_fjidx] FatJet_Pt[Hbb_fjidx] MET_Pt V_mt SA5 FatJet_Pt[Hbb_fjidx]/V_pt (FatJet_deepTagMD_bbvsLight[Hbb_fjidx])>0.97 (-99+(hJidx[0]>-1)*(99+H_mass))


# uses both variables
[ZllBDTVarsDeepCSV_KINFIT]
Nominal = kinFit_H_mass_fit H_mass kinFit_H_pt_fit H_pt kinFit_HVdPhi_fit abs(VHbb::deltaPhi(H_phi,V_phi)) Jet_btagDeepB[hJidx[0]] Jet_btagDeepB[hJidx[1]] max(kinFit_hJets_pt_0_fit,kinFit_hJets_pt_1_fit) max(hJets_0_pt_FSRrecovered,hJets_1_pt_FSRrecovered) min(kinFit_hJets_pt_0_fit,kinFit_hJets_pt_1_fit) min(hJets_0_pt_FSRrecovered,hJets_1_pt_FSRrecovered) kinFit_V_mass_fit V_mass Sum$(Jet_Pt>30&&abs(Jet_eta)<2.4&&(Jet_puId>6||Jet_Pt>50)&&Jet_jetId>4&&Jet_lepFilter>0&&Iteration$!=hJidx[0]&&Iteration$!=hJidx[1]) kinFit_V_pt_fit V_pt kinFit_jjVPtRatio_fit (H_pt/V_pt) hJets_FSRrecovered_dEta SA5 VHbb::deltaR(kinFit_H_eta_fit,kinFit_H_phi_fit,kinFit_V_eta_fit,kinFit_V_phi_fit) VHbb::deltaR(H_eta,H_phi,V_eta,V_phi) MET_Pt kinFit_H_mass_sigma_fit kinFit_n_recoil_jets_fit TMath::Sqrt(hJets_FSRrecovered_dEta*hJets_FSRrecovered_dEta+hJets_FSRrecovered_dPhi*hJets_FSRrecovered_dPhi)

[ZllBDTVarsDeepCSV_KINFITONLY]
Nominal = kinFit.H_mass_fit_fallback kinFit.H_pt_fit_fallback kinFit.HVdPhi_fit_fallback Jet_btagDeepB[hJidx[0]] Jet_btagDeepB[hJidx[1]] kinFit.hJets_pt_0_fit_fallback kinFit.hJets_pt_1_fit_fallback kinFit.V_mass_fit Sum$(Jet_PtReg>30&&abs(Jet_eta)<2.4&&(Jet_puId>6||Jet_Pt>50)&&Jet_jetId>4&&Jet_lepFilter>0&&Iteration$!=hJidx[0]&&Iteration$!=hJidx[1]) kinFit.V_pt_fit kinFit.jjVPtRatio_fit_fallback abs(Jet_eta[hJidx[0]]-Jet_eta[hJidx[1]]) SA5 VHbb::deltaR(kinFit.H_eta_fit,kinFit.H_phi_fit,kinFit.V_eta_fit,kinFit.V_phi_fit) MET_Pt kinFit.H_mass_sigma_fit kinFit.n_recoil_jets_fit VHbb::deltaR(Jet_eta[hJidx[0]],Jet_phi[hJidx[0]],Jet_eta[hJidx[1]],Jet_phi[hJidx[1]]) 

[ZllBDTVarsDeepCSV_REG]
Nominal = H_mass H_pt abs(VHbb::deltaPhi(H_phi,V_phi)) Jet_btagDeepB[hJidx[0]] Jet_btagDeepB[hJidx[1]] Jet_PtReg[hJidx[0]] Jet_PtReg[hJidx[1]] V_mass Sum$(Jet_PtReg>30&&abs(Jet_eta)<2.4&&(Jet_puId>6||Jet_Pt>50)&&Jet_jetId>0&&Jet_lepFilter>0&&Iteration$!=hJidx[0]&&Iteration$!=hJidx[1]) V_pt (H_pt/V_pt) abs(Jet_eta[hJidx[0]]-Jet_eta[hJidx[1]]) SA5 VHbb::deltaR(H_eta,H_phi,V_eta,V_phi) MET_Pt VHbb::deltaR(Jet_eta[hJidx[0]],Jet_phi[hJidx[0]],Jet_eta[hJidx[1]],Jet_phi[hJidx[1]])


;!! ------------------
;!! Boosted MVA 
;!! ------------------


[ZllBDTBOOSTVarsFinal_wdB]
#Nominal = FatJet_Msoftdrop[Hbb_fjidx] FatJet_Pt[Hbb_fjidx] SA5 FatJet_Pt[Hbb_fjidx]/V_pt (FatJet_deepTagMD_bbvsLight[Hbb_fjidx])>0.97 (-99+(hJidx[0]>-1)*(+99+H_mass))
Nominal = FatJet_Msoftdrop[Hbb_fjidx] FatJet_Pt[Hbb_fjidx] SA5 FatJet_Pt[Hbb_fjidx]/V_pt (FatJet_deepTagMD_bbvsLight[Hbb_fjidx])>0.97 (-99+(hJidx[0]>-1)*(99+kinFit_H_mass_fit)) (-99+(hJidx[0]>-1)*(99+H_mass)) (-99+(hJidx[0]>-1)*(99+kinFit_H_pt_fit)) (-99+(hJidx[0]>-1)*(99+H_pt)) (-99+(hJidx[0]>-1)*(99+kinFit_V_pt_fit)) (-99+(hJidx[0]>-1)*(99+V_pt)) (-99+(hJidx[0]>-1)*(99+MET_Pt)) (-99+(hJidx[0]>-1)*(99+hJets_FSRrecovered_dEta)) (-99+(hJidx[0]>-1)*(99+kinFit_jjVPtRatio_fit)) (-99+(hJidx[0]>-1)*(99+V_mass))  (-99+(hJidx[0]>-1)*(99+kinFit_V_mass_fit)) (-99+(hJidx[0]>-1)*(99+kinFit_HVdPhi_fit)) (-99+(hJidx[0]>-1)*(99+abs(VHbb::deltaPhi(H_phi,V_phi)))) (-99+(hJidx[0]>-1)*(99+max(kinFit_hJets_pt_0_fit,kinFit_hJets_pt_1_fit))) (-99+(hJidx[0]>-1)*(99+max(hJets_0_pt_FSRrecovered,hJets_1_pt_FSRrecovered))) (-99+(hJidx[0]>-1)*(99+min(kinFit_hJets_pt_0_fit,kinFit_hJets_pt_1_fit))) (-99+(hJidx[0]>-1)*(99+min(hJets_0_pt_FSRrecovered,hJets_1_pt_FSRrecovered))) (-99+(hJidx[0]>-1)*(99+Sum$(Jet_Pt>30&&abs(Jet_eta)<2.4&&(Jet_puId>6||Jet_Pt>50)&&Jet_jetId>4&&Jet_lepFilter>0&&Iteration$!=hJidx[0]&&Iteration$!=hJidx[1]))) (-99+(hJidx[0]>-1)*(99+VHbb::deltaR(kinFit_H_eta_fit,kinFit_H_phi_fit,kinFit_V_eta_fit,kinFit_V_phi_fit))) (-99+(hJidx[0]>-1)*(99+VHbb::deltaR(H_eta,H_phi,V_eta,V_phi))) (-99+(hJidx[0]>-1)*(99+TMath::Sqrt(hJets_FSRrecovered_dEta*hJets_FSRrecovered_dEta+hJets_FSRrecovered_dPhi*hJets_FSRrecovered_dPhi))) (-99+(hJidx[0]>-1)*(99+kinFit_H_mass_sigma_fit)) (-99+(hJidx[0]>-1)*(99+kinFit_n_recoil_jets_fit)) (-99+(hJidx[0]>-1)*(99+H_pt/V_pt))



[VZ_ZllBDTBOOSTVarsFinal_wdB]
#Nominal = FatJet_Msoftdrop[Hbb_fjidx] FatJet_Pt[Hbb_fjidx] MET_Pt V_mt SA5 FatJet_Pt[Hbb_fjidx]/V_pt (FatJet_deepTagMD_bbvsLight[Hbb_fjidx])>0.97 (-99+(hJidx[0]>-1)*(+99+H_mass))
Nominal = FatJet_Msoftdrop[Hbb_fjidx] FatJet_Pt[Hbb_fjidx] SA5 FatJet_Pt[Hbb_fjidx]/V_pt (FatJet_deepTagMD_bbvsLight[Hbb_fjidx])>0.97 abs(TVector2::Phi_mpi_pi(V_phi-FatJet_phi[Hbb_fjidx])) (-99+(hJidx[0]>-1)*(99+H_mass)) (-99+Alt$((hJidx[0]>-1)*(99+H_pt),0)) (-99+Alt$((hJidx[0]>-1)*(99+V_pt/H_pt),0)) (-99+Alt$((hJidx[0]>-1)*(99+abs(TVector2::Phi_mpi_pi(V_phi-H_phi))),0)) (-99+Alt$((hJidx[0]>-1)*(99+max(hJets_0_pt_FSRrecovered,hJets_1_pt_FSRrecovered)),0)) (-99+Alt$((hJidx[0]>-1)*(99+min(hJets_0_pt_FSRrecovered,hJets_1_pt_FSRrecovered)),0)) (-99+Alt$((hJidx[0]>-1)*(99+hJets_FSRrecovered_dEta),0)) (-99+Alt$((hJidx[0]>-1)*(99+Sum$(Jet_Pt>30&&abs(Jet_eta)<2.5&&(Jet_puId>6||Jet_Pt>50.0)&&Jet_jetId>4&&Jet_lepFilter&&Iteration$!=hJidx[0]&&Iteration$!=hJidx[1])),0))


#Category which must cover exactly the features used for training
#The order of the variables is crucial, has to match the training

[BIT_SRlowmedhigh_Zll_varSet]
Nominal = <!BIT_SRlowmedhigh_Zll_varSet|AngularMoments!> <!BIT_SRlowmedhigh_Zll_varSet|BoostKinematics!> <!BIT_SRlowmedhigh_Zll_varSet|AngularKinematics!> <!BIT_SRlowmedhigh_Zll_varSet|JetKinematics!> Vtype
 
AngularMoments= EFT_obs_Theta_l EFT_obs_theta_l EFT_obs_phi_l <!Plot_general|fll!> <!Plot_general|f1tt!> <!Plot_general|f2tt!> <!Plot_general|f1lt!> <!Plot_general|f2lt!> <!Plot_general|f1lttilde!> <!Plot_general|f2lttilde!> <!Plot_general|fttprime!> <!Plot_general|fttprimetilde!>

BoostKinematics = EFT_obs_VH_mass H_mass V_mass V_pt H_pt (H_pt/V_pt) H_eta V_eta Helicity_thrust Helicity_Zh_beam_angle MET_Pt

AngularKinematics =  abs(VHbb::deltaPhi(H_phi,V_phi)) VHbb::deltaR(H_eta,H_phi,V_eta,V_phi) abs(H_eta-V_eta) <!plotDef:deltaEtabb|relPath!> <!plotDef:deltaPhibb|relPath!> <!plotDef:deltaRbb|relPath!> 

JetKinematics = max(kinFit_hJets_pt_0_fit,kinFit_hJets_pt_1_fit) min(kinFit_hJets_pt_0_fit,kinFit_hJets_pt_1_fit) min(hJets_0_pt_FSRrecovered,hJets_1_pt_FSRrecovered) max(hJets_0_pt_FSRrecovered,hJets_1_pt_FSRrecovered) Jet_eta[<!General|btagidx0!>] Jet_eta[<!General|btagidx1!>] Jet_phi[<!General|btagidx0!>] Jet_phi[<!General|btagidx1!>]

#The muons and electrons are split and recombined to garantee that the correct quantity is computed
OnlyMuons = (<!plotDef:m0pt|relPath!>/<!plotDef:m1pt|relPath!>) <!plotDef:deltaRmm|relPath!> <!plotDef:deltaPhimm|relPath!> <!plotDef:deltaEtamm|relPath!> <!plotDef:m0pt|relPath!> <!plotDef:m1pt|relPath!> <!plotDef:m0eta|relPath!> <!plotDef:m0phi|relPath!> <!plotDef:m1eta|relPath!> <!plotDef:deltaPhibm|relPath!> <!plotDef:deltaPhibmSL|relPath!>


OnlyElectrons = (<!plotDef:e0pt|relPath!>/<!plotDef:e1pt|relPath!>) <!plotDef:deltaRee|relPath!> <!plotDef:deltaPhiee|relPath!> <!plotDef:deltaEtaee|relPath!> <!plotDef:e0pt|relPath!> <!plotDef:e1pt|relPath!> <!plotDef:e0eta|relPath!> <!plotDef:e0phi|relPath!> <!plotDef:e1eta|relPath!> <!plotDef:deltaPhibe|relPath!> <!plotDef:deltaPhibeSL|relPath!>

[BIT_boosted_Zll_varSet]
Nominal = <!BIT_SRlowmedhigh_Zll_varSet|AngularMoments!> Vtype <!BIT_boosted_Zll_varSet|BoostKinematics!>

BoostKinematics = FatJet_Msoftdrop[Hbb_fjidx] FatJet_Pt[Hbb_fjidx] SA5 FatJet_Pt[Hbb_fjidx]/V_pt (-99+(hJidx[0]>-1)*(99+H_mass)) (-99+(hJidx[0]>-1)*(99+H_pt)) (-99+(hJidx[0]>-1)*(99+V_pt)) (-99+(hJidx[0]>-1)*(99+MET_Pt)) (-99+(hJidx[0]>-1)*(99+V_mass)) (-99+(hJidx[0]>-1)*(99+max(kinFit_hJets_pt_0_fit,kinFit_hJets_pt_1_fit))) (-99+(hJidx[0]>-1)*(99+min(kinFit_hJets_pt_0_fit,kinFit_hJets_pt_1_fit))) (-99+(hJidx[0]>-1)*(99+kinFit_H_mass_sigma_fit)) 


#The muons and electrons are split and recombined to garantee that the correct quantity is computed
OnlyMuons = (<!plotDef:m0pt|relPath!>/<!plotDef:m1pt|relPath!>) <!plotDef:deltaRmm|relPath!> <!plotDef:deltaPhimm|relPath!> <!plotDef:deltaEtamm|relPath!> <!plotDef:m0pt|relPath!> <!plotDef:m1pt|relPath!> <!plotDef:m0eta|relPath!> <!plotDef:m0phi|relPath!> <!plotDef:deltaPhibm|relPath!>

OnlyElectrons = (<!plotDef:e0pt|relPath!>/<!plotDef:e1pt|relPath!>) <!plotDef:deltaRee|relPath!> <!plotDef:deltaPhiee|relPath!> <!plotDef:deltaEtaee|relPath!> <!plotDef:e0pt|relPath!> <!plotDef:e1pt|relPath!> <!plotDef:e0eta|relPath!> <!plotDef:e0phi|relPath!> <!plotDef:deltaPhibe|relPath!>



[BITvarSet]
Nominal = <!BITvarSet|AngularMoments!> <!BITvarSet|BoostKinematics!> <!BITvarSet|AngularKinematics!> <!BITvarSet|JetKinematics!> <!BITvarSet|OnlyElectrons!> <!BITvarSet|OnlyMuons!> Vtype
#<!BITvarSet|Helicity!>


AngularMoments= EFT_obs_Theta_l EFT_obs_theta_l EFT_obs_phi_l <!Plot_general|fll!> <!Plot_general|f1tt!> <!Plot_general|f2tt!> <!Plot_general|f1lt!> <!Plot_general|f2lt!> <!Plot_general|f1lttilde!> <!Plot_general|f2lttilde!> <!Plot_general|fttprime!> <!Plot_general|fttprimetilde!>

#BoostKinematics = kinFit_H_mass_fit kinFit_H_pt_fit kinFit_HVdPhi_fit EFT_obs_VH_mass H_mass H_pt V_pt kinFit_jjVPtRatio_fit (H_pt/V_pt) kinFit_n_recoil_jets_fit MET_Pt
BoostKinematics = EFT_obs_VH_mass V_mass H_mass V_pt H_pt (H_pt/V_pt) H_eta V_eta Helicity_thrust Helicity_Zh_beam_angle MET_Pt


#JetKinematics = max(kinFit_hJets_pt_0_fit,kinFit_hJets_pt_1_fit) max(hJets_0_pt_FSRrecovered,hJets_1_pt_FSRrecovered) min(kinFit_hJets_pt_0_fit,kinFit_hJets_pt_1_fit) min(hJets_0_pt_FSRrecovered,hJets_1_pt_FSRrecovered) <!plotDef:kinFit_hj_pt_ratio|relPath!>
JetKinematics = max(kinFit_hJets_pt_0_fit,kinFit_hJets_pt_1_fit) min(kinFit_hJets_pt_0_fit,kinFit_hJets_pt_1_fit) min(hJets_0_pt_FSRrecovered,hJets_1_pt_FSRrecovered) max(hJets_0_pt_FSRrecovered,hJets_1_pt_FSRrecovered) Jet_eta[<!General|btagidx0!>] Jet_eta[<!General|btagidx1!>] Jet_phi[<!General|btagidx0!>] Jet_phi[<!General|btagidx1!>]

# max(hJets_0_pt_FSRrecovered,hJets_1_pt_FSRrecovered) 

#AngularKinematics = H_eta V_eta abs(VHbb::deltaPhi(H_phi,V_phi)) VHbb::deltaR(H_eta,H_phi,V_eta,V_phi) <!plotDef:deltaEtabb|relPath!> <!plotDef:deltaRbb|relPath!> <!plotDef:deltaPhibb|relPath!> 
AngularKinematics =  abs(VHbb::deltaPhi(H_phi,V_phi)) VHbb::deltaR(H_eta,H_phi,V_eta,V_phi) <!plotDef:deltaEtabb|relPath!> <!plotDef:deltaPhibb|relPath!> <!plotDef:deltaRbb|relPath!> abs(H_eta-V_eta) 

OnlyMuons = <!plotDef:deltaRmm|relPath!> <!plotDef:deltaPhimm|relPath!> <!plotDef:deltaEtamm|relPath!> <!plotDef:m0pt|relPath!> <!plotDef:m1pt|relPath!> (<!plotDef:m0pt|relPath!>/<!plotDef:m1pt|relPath!>) <!plotDef:deltaPhibm|relPath!> <!plotDef:deltaPhibmSL|relPath!> <!plotDef:m0eta|relPath!> <!plotDef:m1eta|relPath!> <!plotDef:m0phi|relPath!>

OnlyElectrons = <!plotDef:deltaRee|relPath!> <!plotDef:deltaPhiee|relPath!> <!plotDef:deltaEtaee|relPath!> <!plotDef:e0pt|relPath!> <!plotDef:e1pt|relPath!> (<!plotDef:e0pt|relPath!>/<!plotDef:e1pt|relPath!>) <!plotDef:deltaPhibe|relPath!> <!plotDef:deltaPhibeSL|relPath!> <!plotDef:e0eta|relPath!> <!plotDef:e1eta|relPath!> <!plotDef:e0phi|relPath!>


#OnlyLeptons = max(<!plotDef:deltaRee|relPath!>,<!plotDef:deltaRmm|relPath!>) max(<!plotDef:deltaPhiee|relPath!>,<!plotDef:deltaPhimm|relPath!>) max(<!plotDef:deltaEtaee|relPath!>,<!plotDef:deltaEtamm|relPath!>) max(<!plotDef:e0pt|relPath!>,<!plotDef:m0pt|relPath!>) max(<!plotDef:e1pt|relPath!>,<!plotDef:m1pt|relPath!>)


#min(<!plotDef:deltaPhibe|relPath!>,<!plotDef:deltaPhibm|relPath!>)
#CAREFUL WITH DELTAPHIBE/BM



Helicity = Helicity_thrust Helicity_Zh_beam_angle 

#EFT_BIT_weights[0] EFT_BIT_weights[1] EFT_BIT_weights[17] 


;;;;;;;;;;;;;;
;BDT Boost
;;;;;;;;;;;;;;
#[Zll_high_BOOST_BDT]


[BIT_Zll_test_2018]
MVAtype     = <!MVAGeneral|type!>
MVAsettings = NTrees=100:nCuts=20 
signals     = [<!Plot_general|allSIG!>]
backgrounds = [<!Plot_general|BKGBIT!>]
treeVarSet  = BITvarSet
#No DNN cut for now
treeCut = SR_lowmedhigh_Zmm
#treeCut = SR_high1_Zll
systematics = <!systematics|systematics!>
includeEFTweights = True  




[BDT_Zll_BOOSTFinal_wdB_withFullResolvedFeatures_2018_updatedKINFITvars]
MVAtype     = <!MVAGeneral|type!>
MVAsettings = NTrees=100:nCuts=20 
signals     = [<!Plot_general|allSIG!>]
backgrounds = [<!Plot_general|allBKG!>]
treeVarSet  = ZllBDTBOOSTVarsFinal_wdB
treeCut     = Signal_BOOSTv3
systematics = <!systematics|systematics!>





[BDT_Zll_BOOSTFinal_wdB_withFullResolvedFeatures_2018_fix]
MVAtype     = <!MVAGeneral|type!>
MVAsettings = NTrees=100:nCuts=20 
signals     = [<!Plot_general|allSIG!>]
backgrounds = [<!Plot_general|allBKG!>]
treeVarSet  = ZllBDTBOOSTVarsFinal_wdB
treeCut     = Signal_BOOSTv3
systematics = <!systematics|systematics_BOOST!>

#[VZ_Zll_high_BOOST_BDT]
[BDT_VZ_Wlv_forZll_BOOSTFinal_wdB_2018]
MVAtype     = <!MVAGeneral|type!>
MVAsettings = NTrees=100:nCuts=20 
signals     = [<!Plot_general|VVSIG!>]
backgrounds = [<!Plot_general|VVBKG!>]
treeVarSet  = VZ_ZllBDTBOOSTVarsFinal_wdB
treeCut     = Signal_BOOSTv3
systematics = <!systematics|systematics_BOOST!>
