#! ------------------------
#!! GENERAL CONFIGURATION
#!! -------------------------

[General]
electronMVA = <!General|electronMVA90!>
preselectionCut = 1
#Htype = REG
Htype = KINFIT

[SubmitOptions]
submitScriptSpecialOptions = {'run': ' -l h_vmem=3g'}

[Configuration]
# NanoAOD format
treeName = Events
#countTreeName = genEventSumw_ 
#for NanoAODv7
#countTreeName = genWtHist
AllowDuplicateTrees = True
countsFromAutoPU = False

[Prep]
Step1           = ['VHbbCommon.Clean','VHbbCommon.JetSmearer','VHbbCommon.JECcorrelator','VHbbCommon.LeptonSelection']
Step2           = ['VHbbCommon.METXY','VHbbCommon.mSD_scale_res_shift','VHbbCommon.Selection', 'VHbbCommon.isData', 'VHbbCommon.isSignal','VHbbCommon.isWH','VHbbCommon.isZH','VHbbCommon.HeppyStyleGen','VHbbCommon.genBstatus']

[Sys]
useTreeFriends = False

#test = ['VHbbCommon.EFT_obs','VHbbCommon.EFT_params']
test = ['VHbbCommon.EFT_obs','VHbbCommon.EFT_interpolation']

all = ['VHbbCommon.BTagSF','VHbbCommon.electronSF','VHbbCommon.muonSF','VHbbCommon.HiggsReco','VHbbCommon.vLeptons','VHbbCommon.EWKweights','VHbbCommon.DYspecialWeight', 'VHbbCommon.LOtoNLOweight','VHbbCommon.JetPUIDSF','VHbbCommon.SampleGroup','VHbbCommon.DoubleBtagSF']
#all = ['VHbbCommon.DYspecialWeight']


all2 = ['VHbbCommon.isBoosted','VHbbCommon.isBoostedVZ']


scalingstep = ['VHbbCommon.EFT_scaling']
AddEFTobs = ['VHbbCommon.EFT_obs']
AddEFTCorrelation = ['VHbbCommon.EFT_correlation']
AddEFTBITweights = ['VHbbCommon.EFT_BIT_weights']

#all = ['VHbbCommon.SampleGroup','VHbbCommon.BTagSFDeepCSV','Sys.electronSFrun2','Sys.muonSF','Sys.Run2017BmuHLT','VHbbCommon.HiggsReco','VHbbCommon.vLeptons','VHbbCommon.EWKweights','VHbbCommon.DYspecialWeight', 'VHbbCommon.LOtoNLOweight','VHbbCommon.JetPUIDSF','VHbbCommon.DoubleBtagSF']

#boostedFlags = ['VHbbCommon.isBoosted','VHbbCommon.isBoostedVZ']


# weights
muonSF = MuonSFfromJSON.MuonSFfromJSON(jsonFiles=['/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/Zll/Muons/RunABCD2018_SF_ID.json','/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/Zll/Muons/RunABCD2018_SF_ISO.json','/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/Zll/Muons/Eff_IsoMu8Cut_NUM_IsoMu8leg_DEN_LooseRelIso_PAR_newpt_etaMC2018.json','/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/Zll/Muons/Eff_IsoMu17Cut_NUM_IsoMu17leg_DEN_LooseRelIso_PAR_newpt_etaMC2018.json','/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/Zll/Muons/Eff_IsoMu8Cut_NUM_IsoMu8leg_DEN_LooseRelIso_PAR_newpt_eta_DATA2018.json','/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/Zll/Muons/Eff_IsoMu17Cut_NUM_IsoMu17leg_DEN_LooseRelIso_PAR_newpt_eta_DATA2018.json'], channel='Zll',year=2018)
electronSF = ElectronSFfromJSON.ElectronSFfromJSON(jsonFiles=['/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/Zll/Electrons/IDs2018passingMVA94Xwp90iso.json','/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/Zll/Electrons/Trig2018passingDoubleEleLeg1.json','/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/Zll/Electrons/Trig2018passingDoubleEleLeg2.json','data/Wlv/Electrons/ScaleFactor_etracker_80x.json'], branchName='electronSF', channel='Zll', year=2018)

PUweight = PUweight.PUweight(fileNameData='/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/pu/2018/PileupHistogram-goldenJSON-13tev-2018-69200ub-100bins.root',fileNameMC='/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/pu/2018/mc_pu.root',fileNameDataUp='/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/pu/2018/PileupHistogram-goldenJSON-13tev-2018-72400ub-100bins.root',fileNameDataDown='/work/krgedia/CMSSW_10_1_0/src/Xbb/python/data/pu/2018/PileupHistogram-goldenJSON-13tev-2018-66000ub-100bins.root',puWeightName='puWeight')

# PU weight is now already present!
#PUweight = PUweight.PUweight(fileNameData='data/pu/2017/PU_Cert_294927-306462_13TeV_PromptReco_Collisions17_JSON.root',fileNameMC=None,fileNameDataUp='data/pu/2017/PU_Cert_294927-306462_13TeV_PromptReco_Collisions17_JSON_Up.root',fileNameDataDown='data/pu/2017/PU_Cert_294927-306462_13TeV_PromptReco_Collisions17_JSON_Down.root',puWeightName='puWeightAuto')
GetDoubleMuTriggWeight = GetDoubleMuTriggWeight.GetDoubleMuTriggWeight()
aJidx = aJidx.aJidx()

# clean-up
DropFatJet = Drop.Drop(dropBranches=['FatJet_*','nFatJet'])
DropTau = Drop.Drop(dropBranches=['Tau_*','nTau','nGenVisTau','GenVisTau_*'])
DropPhoton = Drop.Drop(dropBranches=['Photon_*','nPhoton'])
DropSubJet = Drop.Drop(dropBranches=['SubJet_*','nSubJet'])
DropTrigObj = Drop.Drop(dropBranches=['TrigObj_*','nTrigObj'])
DropMETsys = Drop.Drop(dropBranches=['MET_pt_j*','MET_phi_j*'])
DropUnusedHLT = Drop.Drop(dropBranches=['HLT_*'],keepBranches=['HLT_Ele23_Ele12_CaloIdL_TrackIdL_Iso*','HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass*'])
Run2017BmuHLT = BranchTools.DefaultIfNotExisting(branchName='HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8',branchType='O',defaultValue=0)
Selection2017V2JERfix = Selection2017V2JERfix.Selection2017V2JERfix()

[KinematicFit]
fitter = kinFitterXbb.kinFitterXbb(year=2017)

# this is to remove all kinfit variables from trees
Drop = Drop.Drop(['kinFit*'])

[Eval]
weightAsBranch = WeightAsBranch.WeightAsBranch()

#all = ['Eval.weightAsBranch','VHbbCommon.isBoosted','VHbbCommon.isBoostedVZ'] + 
#all = ['Eval.weightAsBranch'] + <!Eval|VH!>+<!Eval|VV!>
all = <!Eval|VH!>
#VV  = ['Eval.VV_SR_low_Zll', 'Eval.VV_SR_medhigh_Zll','Eval.VH_BDT_Zll_BOOST']
#VH  = ['Eval.SR_low_Zll','Eval.SR_medhigh_Zll','Eval.VZ_BDT_Zll_BOOST']
VH  = ['Eval.SR_low_Zll','Eval.SR_medhigh_Zll','Eval.VH_BDT_Zll_BOOST']
#DNN = ['Eval.VV_SR_low_Zll', 'Eval.VV_SR_medhigh_Zll','Eval.SR_low_Zll','Eval.SR_medhigh_Zll']

# DNNs
SR_low_Zll     = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='SR_low_Zll')
SR_medhigh_Zll = tensorflowEvaluator_fromCheckpoint.tensorflowEvaluator(mvaName='SR_medhigh_Zll')
#VZ_BDT_Zll_BOOST = tmvaEvaluator.tmvaEvaluator(mvaName='BDT_VZ_Wlv_forZll_BOOSTFinal_wdB_2018',condition='Hbb_fjidx>-1')
VH_BDT_Zll_BOOST = tmvaEvaluator.tmvaEvaluator(mvaName='BDT_Zll_BOOSTFinal_wdB_withFullResolvedFeatures_2018_updatedKINFITvars',condition='Hbb_fjidx>-1')

VZ_BDT_branchName = BDT_VZ_Wlv_forZll_BOOSTFinal_wdB_2018
#VH_BDT_branchName = BDT_Zll_BOOSTFinal_wdB_withFullResolvedFeatures_2018_fix
VH_BDT_branchName = BDT_Zll_BOOSTFinal_wdB_withFullResolvedFeatures_2018_updatedKINFITvars


[Weights]

;_*_*_*_
;Nominal
;_*_*_*_

#muTrigWeight     = ((Vtype==1&&HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ) + (Vtype==0)*(4.767/41.298*HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8 + 36.531/41.298*HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8))
muTrigWeight     = 1.0
# double muon scale factors broken in 2017
#muonWeight       = muonSF_Iso[0]*muonSF_Id[0]*DoubleMu[0]
muonWeight       = (muonSF_Iso[0]*muonSF_Id[0]*muonSF_trigger[0])
electronWeight   = (electronSF_IdIso[0]*electronSF_trigger[0])
leptonWeight     = (<!Weights|muonWeight!>*<!Weights|electronWeight!>)
doubleBtagWeight = (1.0+<!General|DeepAK8weightApplies!>*(-1.0+bTagWeightDoubleB)) 
#bTagWeight       = (1.0+<!General|DeepCSVweightApplies!>*(-1.0+bTagWeightDeepCSV))
bTagWeight       = (1.0+<!General|resolvedBtagWeightApplies!>*(-1.0+bTagWeight<!General|btagMethod!>))
puWeight         = puWeight
genWeight        = genWeight
weightNLO        = weightLOtoNLO_LHEVptV5
#weightLOtoNLO_2016   
#weightLOtoNLO_LHEVptV2b
ewkWeight        = EWKw[0]

EFTWeight = EFT_interpolation_weight[0]


; top pt reweighting
FitCorr          = FitCorr[0]
weightJetPUID    = weightJetPUID

; use the per sample defined special weight from config
;When True, uses special weight from samples_nosplit.ini
useSpecialWeight        = True
#useSpecialWeight        = False

stitchingWeights_False  = DY_specialWeight 
stitchingWeights_True   = 1.0
stitchingWeights        = <!Weights|stitchingWeights_<!.|useSpecialWeight!>!>

weightF = <!Weights|genWeight!> * <!Weights|puWeight!> * <!Weights|stitchingWeights!> * <!Weights|bTagWeight!> * <!Weights|ewkWeight!> * <!Weights|weightJetPUID!> * <!Weights|leptonWeight!> * <!Weights|weightNLO!> * <!Weights|doubleBtagWeight!>
#weightF = <!Weights|EFTWeight!> 
weight_noBTag    = (<!.|weightF!>)/(<!Weights|bTagWeight!>)
#weight_noPU      = (<!.|weightF!>)/(<!Weights|puWeight!>)
weight_noPU      = <!Weights|genWeight!> * <!Weights|stitchingWeights!> * <!Weights|bTagWeight!> * <!Weights|ewkWeight!> * <!Weights|weightJetPUID!> * <!Weights|leptonWeight!> * <!Weights|weightNLO!> * <!Weights|doubleBtagWeight!>
weight_noLepSF   = (<!.|weightF!>)/(<!Weights|leptonWeight!>) 
weight_noEWK     = (<!.|weightF!>)/(<!Weights|ewkWeight!>)
weight_noNLO     = (<!.|weightF!>)/(<!Weights|weightNLO!>) 


[Branches]
;branch that should always be kept in the Nutples
keep_branches = ['is*', 'run', 'event', 'luminosityBlock', 'sampleIndex', 'genWeight', 'puWeight', 'V_*','EWKwVJets', 'LHE_*', 'Vtype', 'vLidx', 'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass*', 'HLT_Ele23_Ele12_CaloIdL_TrackIdL_Iso*', 'GenJet_pt', 'GenJet_eta', 'GenJet_hadronFlavour', 'genWeight','electronSF','muonSF','bTagWeightDeepCSV*','Pileup_nTrueInt', 'fixedGridRhoFastjetAll','*BDT*','puWeightDown','puWeightUp','btagWeight_DeepCSVB','nGenStatus2bHad','GenPart*','DY_specialWeight','weightLO*','nFSRrecovered','Jet_lepFilter','weight*', 'EFT_obs*', 'EFT_interpolation*', 'EFT_scaling*','EFT_correlation*','EFT_BIT_weights*']

#keep_branches = ['*BDT*','*DNN*','bTagWeight*','btagWeight*','dPhiLepMet','DY_specialWeight','Electron_mva*','electron*','eTrigSFWeight_doubleEle80x','event','EWKW','EWKwVJets','FitCorr','FitCorr*','fixedGridRhoFastjetAll','GenB*','GenJet_eta','GenJet_hadronFlavour','GenJet_numBHadrons','GenJet_pt','GenJetAK8_nBhadrons','GenPart*','genWeight','GenWZQuark_pdgId','H_eta','H_mass','H_mass_jerReg*','H_mass_noFSR','H_phi','H_pt','H_pt_noFSR','hJidx','HLT_Ele23_Ele12_CaloIdL_TrackIdL_Iso*','HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL','HLT_Ele32_WPTight_Gsf_L1DoubleEG','HLT_IsoMu27','HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass*','HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8','HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8','HLT_PFMET120_PFMHT120_IDTight','HLT_PFMET120_PFMHT120_IDTight_PFHT60','is*','isData','Jet_btag*','Jet_eta','Jet_lepFilter','Jet_jetId','Jet_puId','Jet_mass','Jet_phi','Jet_Pt','Jet_PtReg','Jet_PtReg*','kinFit*','LHE_*','LHE_HT','LHE_Nb','LHE_Nc','LHE_Njets','LHE_Nuds','LHE_Vpt','LHE_weights_scale_wgt','LHEScaleWeight','luminosityBlock','MET_phi','MET_Pt','MET_pt','minDphiJetMet','muonSF*','muTrigSFWeight_doublemu','nAddJet*','nFSRrecovered','nGenBs','nGenStatus2bHad','Pileup_nTrueInt','PrefireWeight','puWeight','puWeight*','puWeightDown','puWeightUp','run','sampleIndex','SoftActivity*','Sum$(Jet_PtReg>30&&abs(Jet_eta)<2.4&&Jet_puId==7&&Jet_jetId>0&&Jet_lepFilter>0)','V_*','vLidx','Vtype','weight','weight*','DoubleMu*','nGen*','top_mass2_05_neutrino*','top_mass2_05_top','METFix*','resolved*','boosted*','Hbb_fjidx']
keep_branches_plot = []

